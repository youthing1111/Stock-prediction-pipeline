{"timestamp":"2025-06-09T16:11:05.910526","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-09T16:11:05.914318","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/Update.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-09T16:11:08.973591","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-09T16:11:08.992233Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:08.992402Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:08.992523Z","level":"info","event":"Current task name:new","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:08.992622Z","level":"info","event":"Dag name:Stock_prediction_update","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:08.977843","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-09T16:11:08.992824","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-09T16:11:08.999878","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:11:10.076057","level":"warning","event":"/opt/airflow/dags/Update.py:56: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 56 of the file /opt/airflow/dags/Update.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  soup = BeautifulSoup(html)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:11:10.103974","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-09T16:11:10.113517","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-09T16:11:10.121914Z","level":"info","event":"            date  close   open   high    low  volume  change","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122099Z","level":"info","event":"0     2025-04-03  24150  25150  25350  24150   39.69   -6.94","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122209Z","level":"info","event":"1     2025-04-02  25950  26100  26200  25900    7.48   -0.38","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122364Z","level":"info","event":"2     2025-04-01  26050  26000  26050  25900    3.05    0.19","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122565Z","level":"info","event":"3     2025-03-31  26000  25850  26000  25800    9.13    0.19","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122888Z","level":"info","event":"4     2025-03-28  25950  26000  26050  25850    9.73   -0.19","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.122979Z","level":"info","event":"...          ...    ...    ...    ...    ...     ...     ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.123091Z","level":"info","event":"4563  2006-12-08   7745   7965   7965   7471  550.07    4.83","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.123508Z","level":"info","event":"4564  2006-12-07   7388   6867   7388   6867  274.47    6.75","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.124428Z","level":"info","event":"4565  2006-12-06   6921   6592   6921   6592  927.74    2.44","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.125630Z","level":"info","event":"4566  2006-12-05   6757   6921   6921   6592    1.26   -2.38","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.126090Z","level":"info","event":"4567  2006-12-04   6921   7196   7196   6867    1.02   -3.08","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.126437Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.126571Z","level":"info","event":"[4568 rows x 7 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.135806Z","level":"info","event":"            date    close     open     high      low  volume     colume","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.135944Z","level":"info","event":"0     2025-04-03  24150.0  25150.0  25350.0  24150.0   39.69        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136000Z","level":"info","event":"1     2025-04-02  25950.0  26100.0  26200.0  25900.0    7.48        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136042Z","level":"info","event":"2     2025-04-01  26050.0  26000.0  26050.0  25900.0    3.05        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136083Z","level":"info","event":"3     2025-03-31  26000.0  25850.0  26000.0  25800.0    9.13        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136138Z","level":"info","event":"4     2025-03-28  25950.0  26000.0  26050.0  25850.0    9.73        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136217Z","level":"info","event":"...          ...      ...      ...      ...      ...     ...        ...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136303Z","level":"info","event":"4564  2006-12-07   7388.0   6867.0   7388.0   6867.0  274.47        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136400Z","level":"info","event":"4565  2006-12-06   6921.0   6592.0   6921.0   6592.0  927.74        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136447Z","level":"info","event":"4566  2006-12-05   6757.0   6921.0   6921.0   6592.0    1.26        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136487Z","level":"info","event":"4567  2006-12-04   6921.0   7196.0   7196.0   6867.0    1.02        NaN","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136523Z","level":"info","event":"4568  2025-06-09  20950.0  21000.0  21050.0  20900.0     NaN  5725200.0","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136559Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136595Z","level":"info","event":"[4569 rows x 7 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.136731","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-09T16:11:10.148967Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.149201Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:11:10.149536Z","level":"info","event":"Task operator:<Task(PythonOperator): new>","chan":"stdout","logger":"task"}
