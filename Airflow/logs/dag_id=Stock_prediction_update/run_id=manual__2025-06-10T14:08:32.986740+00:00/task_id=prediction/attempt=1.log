{"timestamp":"2025-06-10T14:08:37.512620","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T14:08:37.512946","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/Update.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T14:08:38.759601","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-10T14:08:38.777834Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:38.777956Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:38.778007Z","level":"info","event":"Current task name:prediction","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:38.778049Z","level":"info","event":"Dag name:Stock_prediction_update","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:38.763815","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-10T14:08:38.778354","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-10T14:08:38.785418","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-06-10T14:08:41.862543","level":"warning","event":"/opt/airflow/dags/Update.py:168: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['close_t+1'].iloc[:-1] = df['close'].iloc[1:]\n","logger":"py.warnings"}
{"timestamp":"2025-06-10T14:08:42.725060","level":"warning","event":"/opt/airflow/dags/Update.py:246: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df_close['date'] = pd.to_datetime(df_close['date'],format= '%Y-%m-%d').dt.time\n","logger":"py.warnings"}
{"timestamp":"2025-06-10T14:08:42.731993","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"float() argument must be a string or a real number, not 'datetime.time'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/Update.py","lineno":260,"name":"prediction"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/axes/_axes.py","lineno":1779,"name":"plot"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/axes/_base.py","lineno":2407,"name":"add_line"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/axes/_base.py","lineno":2430,"name":"_update_line_limits"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/lines.py","lineno":1052,"name":"get_path"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/lines.py","lineno":689,"name":"recache"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/matplotlib/cbook.py","lineno":1355,"name":"_to_unmasked_float_array"}]}]}
{"timestamp":"2025-06-10T14:08:42.733059Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:42.733163Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:42.733255Z","level":"info","event":"Task:<Task(PythonOperator): prediction>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:08:42.733322Z","level":"info","event":"Failure caused by float() argument must be a string or a real number, not 'datetime.time'","chan":"stdout","logger":"task"}
