{"timestamp":"2025-06-10T14:03:51.953502","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-10T14:03:51.953800","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/Update.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-10T14:03:53.178367","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-10T14:03:53.195623Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:53.196455Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:53.196589Z","level":"info","event":"Current task name:prediction","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:53.196850Z","level":"info","event":"Dag name:Stock_prediction_update","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:53.182993","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-10T14:03:53.196213","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-10T14:03:53.202606","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-06-10T14:03:55.970542","level":"warning","event":"/opt/airflow/dags/Update.py:168: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df['close_t+1'].iloc[:-1] = df['close'].iloc[1:]\n","logger":"py.warnings"}
{"timestamp":"2025-06-10T14:03:56.494674","level":"info","event":"Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.","logger":"matplotlib.category"}
{"timestamp":"2025-06-10T14:03:56.495100","level":"info","event":"Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.","logger":"matplotlib.category"}
{"timestamp":"2025-06-10T14:03:56.495410","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"KeyError","exc_value":"'pred_index'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/Update.py","lineno":260,"name":"prediction"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/frame.py","lineno":3893,"name":"__getitem__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py","lineno":3798,"name":"get_loc"}]},{"exc_type":"KeyError","exc_value":"'pred_index'","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py","lineno":3791,"name":"get_loc"},{"filename":"/opt/airflow/index.pyx","lineno":152,"name":"pandas._libs.index.IndexEngine.get_loc"},{"filename":"/opt/airflow/index.pyx","lineno":181,"name":"pandas._libs.index.IndexEngine.get_loc"},{"filename":"/opt/airflow/pandas/_libs/hashtable_class_helper.pxi","lineno":7080,"name":"pandas._libs.hashtable.PyObjectHashTable.get_item"},{"filename":"/opt/airflow/pandas/_libs/hashtable_class_helper.pxi","lineno":7088,"name":"pandas._libs.hashtable.PyObjectHashTable.get_item"}]}]}
{"timestamp":"2025-06-10T14:03:56.496016Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:56.496097Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:56.497360Z","level":"info","event":"Task:<Task(PythonOperator): prediction>","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-10T14:03:56.497423Z","level":"info","event":"Failure caused by 'pred_index'","chan":"stdout","logger":"task"}
