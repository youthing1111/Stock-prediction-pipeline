{"timestamp":"2025-06-11T19:32:20.957755","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-11T19:32:20.957992","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/Update.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-11T19:32:22.394053","level":"warning","event":"empty cryptography key - values will not be stored encrypted.","logger":"airflow.models.crypto"}
{"timestamp":"2025-06-11T19:32:22.584149Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:22.585590Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:22.585727Z","level":"info","event":"Current task name:update_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:22.585863Z","level":"info","event":"Dag name:Stock_prediction_update","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:22.400138","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-11T19:32:22.584601","level":"warning","event":"Skipping masking for a secret as it's too short (<5 chars)","logger":"airflow.sdk.execution_time.secrets_masker"}
{"timestamp":"2025-06-11T19:32:22.585405","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-11T19:32:22.598656","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-06-11T19:32:30.612609","level":"warning","event":"/opt/airflow/dags/Update.py:55: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 55 of the file /opt/airflow/dags/Update.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  soup = BeautifulSoup(html)\n","logger":"py.warnings"}
{"timestamp":"2025-06-11T19:32:30.642773","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-11T19:32:30.648168","level":"info","event":"Connection Retrieved 'postgres'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-11T19:32:30.747188","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-11T19:32:30.760668Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:30.760777Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-11T19:32:30.760843Z","level":"info","event":"Task operator:<Task(PythonOperator): update_data>","chan":"stdout","logger":"task"}
