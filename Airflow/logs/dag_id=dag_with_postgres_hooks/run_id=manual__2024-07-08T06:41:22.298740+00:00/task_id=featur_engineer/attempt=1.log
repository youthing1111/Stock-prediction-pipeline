[2024-07-08T06:41:27.853+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-08T06:41:27.861+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_with_postgres_hooks.featur_engineer manual__2024-07-08T06:41:22.298740+00:00 [queued]>
[2024-07-08T06:41:27.864+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_with_postgres_hooks.featur_engineer manual__2024-07-08T06:41:22.298740+00:00 [queued]>
[2024-07-08T06:41:27.864+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-07-08T06:41:27.868+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): featur_engineer> on 2024-07-08 06:41:22.298740+00:00
[2024-07-08T06:41:27.871+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=186) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-08T06:41:27.872+0000] {standard_task_runner.py:63} INFO - Started process 195 to run task
[2024-07-08T06:41:27.872+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'dag_with_postgres_hooks', 'featur_engineer', 'manual__2024-07-08T06:41:22.298740+00:00', '--job-id', '300', '--raw', '--subdir', 'DAGS_FOLDER/sql_2.py', '--cfg-path', '/tmp/tmpa1v8kvuk']
[2024-07-08T06:41:27.873+0000] {standard_task_runner.py:91} INFO - Job 300: Subtask featur_engineer
[2024-07-08T06:41:27.888+0000] {task_command.py:426} INFO - Running <TaskInstance: dag_with_postgres_hooks.featur_engineer manual__2024-07-08T06:41:22.298740+00:00 [running]> on host 10d335c2a089
[2024-07-08T06:41:27.917+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='***@example.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='dag_with_postgres_hooks' AIRFLOW_CTX_TASK_ID='featur_engineer' AIRFLOW_CTX_EXECUTION_DATE='2024-07-08T06:41:22.298740+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-08T06:41:22.298740+00:00'
[2024-07-08T06:41:27.918+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-08T06:41:28.573+0000] {warnings.py:112} WARNING - /opt/***/dags/sql_2.py:218: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  input.drop(columns=["Target","CLOSE_t+1_zscore"],inplace=True)

[2024-07-08T06:41:28.576+0000] {xcom.py:675} ERROR - Object of type Series is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2024-07-08T06:41:28.576+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-08T06:41:28.577+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 91, in default
    return serialize(o)
           ^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py", line 189, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class 'pandas.core.series.Series'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/sql_2.py", line 219, in transform_data
    context['ti'].xcom_push(key="input", value=input)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3197, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 246, in set
    value = cls.serialize_value(
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 673, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 104, in encode
    return super().encode(o)
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 93, in default
    return super().default(o)
           ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Series is not JSON serializable
[2024-07-08T06:41:28.584+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=dag_with_postgres_hooks, task_id=featur_engineer, run_id=manual__2024-07-08T06:41:22.298740+00:00, execution_date=20240708T064122, start_date=20240708T064127, end_date=20240708T064128
[2024-07-08T06:41:28.590+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 300 for task featur_engineer (Object of type Series is not JSON serializable; 195)
[2024-07-08T06:41:28.617+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-07-08T06:41:28.625+0000] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-07-08T06:41:28.627+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
