[2024-07-20T08:27:59.062+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-20T08:27:59.070+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_with_postgres_hooks.pred_time_series manual__2024-07-20T08:27:45.238745+00:00 [queued]>
[2024-07-20T08:27:59.073+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_with_postgres_hooks.pred_time_series manual__2024-07-20T08:27:45.238745+00:00 [queued]>
[2024-07-20T08:27:59.073+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-07-20T08:27:59.078+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): pred_time_series> on 2024-07-20 08:27:45.238745+00:00
[2024-07-20T08:27:59.082+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:62: DeprecationWarning: This process (pid=1624) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-20T08:27:59.082+0000] {standard_task_runner.py:64} INFO - Started process 1633 to run task
[2024-07-20T08:27:59.083+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'dag_with_postgres_hooks', 'pred_time_series', 'manual__2024-07-20T08:27:45.238745+00:00', '--job-id', '204', '--raw', '--subdir', 'DAGS_FOLDER/Stock_pred.py', '--cfg-path', '/tmp/tmpsnfaoqdw']
[2024-07-20T08:27:59.083+0000] {standard_task_runner.py:91} INFO - Job 204: Subtask pred_time_series
[2024-07-20T08:27:59.098+0000] {task_command.py:426} INFO - Running <TaskInstance: dag_with_postgres_hooks.pred_time_series manual__2024-07-20T08:27:45.238745+00:00 [running]> on host 488b1a24c461
[2024-07-20T08:27:59.126+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='***@example.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='dag_with_postgres_hooks' AIRFLOW_CTX_TASK_ID='pred_time_series' AIRFLOW_CTX_EXECUTION_DATE='2024-07-20T08:27:45.238745+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-20T08:27:45.238745+00:00'
[2024-07-20T08:27:59.127+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-20T08:27:59.145+0000] {logging_mixin.py:188} INFO -                   date        CLOSE
0  2020-05-08 00:00:00  8803,964395
[2024-07-20T08:27:59.203+0000] {logging_mixin.py:188} INFO -       OPEN     HIGH      LOW    CLOSE      VOLUME
0  24800.0  25300.0  24650.0  25100.0  18467801.0
[2024-07-20T08:27:59.210+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-20T08:27:59.210+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/Stock_pred.py", line 266, in pred_time_series
    df_full_ts.index = pd.to_datetime(df_full_ts.index).date
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/pandas/core/tools/datetimes.py", line 1121, in to_datetime
    result = convert_listlike(arg, format, name=arg.name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/pandas/core/tools/datetimes.py", line 488, in _convert_listlike_datetimes
    return _array_strptime_with_fallback(arg, name, utc, format, exact, errors)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/pandas/core/tools/datetimes.py", line 519, in _array_strptime_with_fallback
    result, timezones = array_strptime(arg, fmt, exact=exact, errors=errors, utc=utc)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "strptime.pyx", line 534, in pandas._libs.tslibs.strptime.array_strptime
  File "strptime.pyx", line 355, in pandas._libs.tslibs.strptime.array_strptime
ValueError: time data "2024-07-20-00:00:00" doesn't match format "%Y-%m-%d %H:%M:%S", at position 894. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.
[2024-07-20T08:27:59.214+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=dag_with_postgres_hooks, task_id=pred_time_series, run_id=manual__2024-07-20T08:27:45.238745+00:00, execution_date=20240720T082745, start_date=20240720T082759, end_date=20240720T082759
[2024-07-20T08:27:59.218+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 204 for task pred_time_series (time data "2024-07-20-00:00:00" doesn't match format "%Y-%m-%d %H:%M:%S", at position 894. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.; 1633)
[2024-07-20T08:27:59.268+0000] {local_task_job_runner.py:243} INFO - Task exited with return code 1
[2024-07-20T08:27:59.274+0000] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-07-20T08:27:59.275+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
